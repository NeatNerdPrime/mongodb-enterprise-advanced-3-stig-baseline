---
- name: Start service mongodb-server, if not started
  service:
    name: mongod
    state: started

# V-81843
- name: enable security
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: '^#security:$'
    line: 'security:'
- name: set authorization enabled
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)authorization:.*"
    line: "  authorization: enabled"
    insertafter: "^security:$"

# V-81845
#TODO check user roles

# V-81849 V-81887
- name: verify User ownership, Group ownership, and permssions
  file:
    path: /var/lib/mongo/
    owner: mongod
    group: mongod
    mode: '700'

# V-81851
- name: verify User ownership, Group ownership, and permssions
  file:
    path: "{{ mongod_conf }}"
    state: touch
    mode: u+rw,g-rwx,o-rwx

- name: Change file ownership, group and permissions
  file:
    path: "{{ mongod_conf }}"
    owner: mongod
    group: mongod

# V-81871
- name: verify User ownership, Group ownership, and permssions
  file:
    path: "{{ item }}"
    state: touch
    mode: u+rw,g-rwx,o-rwx
  with_items:
      - /etc/ssl/mongodbca.pem
      - /etc/ssl/mongodb.pem

- name: Change file ownership, group and permissions
  file:
    path: "{{ item }}"
    owner: mongod
    group: mongod
  with_items:
      - /etc/ssl/mongodbca.pem
      - /etc/ssl/mongodb.pem

# V-81853
# manual review

# V-81855
# manual review

# V-81857
#TODO check user roles

# V-81859
- name: Uninstall unused packages
  yum:
    name: 
      - enterprise-shell
      - enterprise-mongos
      - enterprise-tools
    state: absent

# V-81861
- name: disable http access
  blockinfile:
    path: "{{ mongod_conf }}"
    marker: "# {mark} http config"
    insertafter: "^net:$"
    block: |2
        http:
          enabled: false
          JSONPEnabled: false
          RESTInterfaceEnabled: false

# V-81863
#TODO check user roles

# V-81865
#TODO ldap auth check

# V-81867
- name: set certificate authenticaion mode
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)clusterAuthMode:.*"
    line: "  clusterAuthMode: x509"
    insertafter: "^security:$"

# V-81869

# V-81873
# manual review

# V-81877
#TODO check user roles

# V-81879 V-81921 V-81923
- name: set SSL as required with custom key file
  blockinfile:
    path: "{{ mongod_conf }}"
    marker: "# {mark} SSL config"
    insertafter: "^net:$"
    block: |2
        ssl:
          mode: requireSSL
          certificateKeyFile: /etc/ssl/mongodb.pem

# V-81875
- name: enable NIST FIPS 140-2-validated cryptographic modules
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)FIPSMode:.*"
    line: "    FIPSMode: true"
    insertafter: "^ +ssl:$"

# V-81881
# default enabled

# V-81883
- name: enable MongoDB Encrypted Storage Engine
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)enableEncryption:.*"
    line: "  enableEncryption: true"
    insertafter: "^security:$"

# V-81885
# manual review

# V-81889
#TODO check user roles

# V-81891
- name: redact sensative data in log file
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)javascriptEnabled:.*"
    line: "  javascriptEnabled: false"
    insertafter: "^security:$"

# V-81893
# manual review

# V-81895
- name: redact sensative data in log file
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)redactClientLogData:.*"
    line: "  redactClientLogData: true"
    insertafter: "^security:$"

# V-81897
# manual review

# V-81899
#TODO check user roles

# # V-81847 V-81901 V-81903 V-81905 V-81907 
- name: set audit log destination
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: ".*auditLog:.*\n.*destination:.*"
    line: "auditLog:\n  destination: syslog"

# V-81909 V-81911
#TODO check user roles

# V-81913
# manual review

# V-81915
# manual review

# V-81917
- name: generate self-signed ssl certificate and key
  shell: |
    openssl req -nodes -x509 -newkey rsa:2048 -keyout /tmp/ca.key -out /tmp/ca.crt -subj "/C=US/ST=DC/L=GOV/O=DOD/OU=root/CN=MONGODB/emailAddress=ansible@mongodb.config"
    openssl req -nodes -newkey rsa:2048 -keyout /tmp/server.key -out /tmp/server.csr -subj "/C=US/ST=DC/L=GOV/O=DOD/OU=server/CN=MONGODB/emailAddress=ansible@mongodb.config"
    openssl x509 -req -in /tmp/server.csr -CA /tmp/ca.crt -CAkey /tmp/ca.key -CAcreateserial -out /tmp/server.crt
    cat /tmp/server.key /tmp/server.crt > /etc/ssl/mongodb.pem
  changed_when: 1

# V-81919
- name: set KMIP settings for data at rest encryption
  blockinfile:
    path: "{{ mongod_conf }}"
    marker: "# {mark} KMIP config"
    insertafter: "^security:$"
    block: |2
        kmip:
          serverName: server.ip
          port: 5696
          clientCertificateFile: /etc/ssl/mongodb_kmip_client.pem
          serverCAFile: /etc/ssl/mongodb_kmip_ca.pem

# V-81925
# manual review

# V-81927
# manual review

# V-81929
# manual review