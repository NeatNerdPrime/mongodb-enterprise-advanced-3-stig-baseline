---
# - name: Start service mongodb-server, if not started
#   service:
#     name: mongod
#     state: started

# V-81843
- name: enable security
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: '^#security:$'
    line: 'security:'
- name: set authorization enabled
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)authorization:.*"
    line: "  authorization: enabled"
    insertafter: "^security:$"
#  notify: restart mongod

# V-81849 V-81887
- name: verify User ownership, Group ownership, and permssions
  file:
    path: /var/lib/mongo/
    owner: mongod
    group: mongod
    mode: '700'

# V-81851
- name: verify User ownership, Group ownership, and permssions
  file:
    path: "{{ mongod_conf }}"
    state: touch
    mode: u+rw,g-rwx,o-rwx

- name: Change file ownership, group and permissions
  file:
    path: "{{ mongod_conf }}"
    owner: mongod
    group: mongod

# V-81871
- name: verify User ownership, Group ownership, and permssions
  file:
    path: "{{ item }}"
    state: touch
    mode: u+rw,g-rwx,o-rwx
  with_items:
      - /etc/ssl/mongodbca.pem
      - /etc/ssl/mongodb.pem

- name: Change file ownership, group and permissions
  file:
    path: "{{ item }}"
    owner: mongod
    group: mongod
  with_items:
      - /etc/ssl/mongodbca.pem
      - /etc/ssl/mongodb.pem

# V-81859 not working
- name: Uninstall unused packages
  yum:
    name: 
      - mongodb-enterprise-mongos
      - mongodb-enterprise-shell
      - mongodb-enterprise-tools
    state: absent

# V-81861
- name: disable http access
  blockinfile:
    path: "{{ mongod_conf }}"
    marker: "# {mark} http config"
    insertafter: "^net:$"
    block: |2
        http:
          enabled: false
          JSONPEnabled: false
          RESTInterfaceEnabled: false
# V-81867
- name: set certificate authenticaion mode
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)clusterAuthMode:.*"
    line: "  clusterAuthMode: x509"
    insertafter: "^security:$"
 # notify: restart mongod

# V-81879 V-81921 V-81923 V-81869
- name: set SSL as required with custom key file
  blockinfile:
    path: "{{ mongod_conf }}"
    marker: "# {mark} SSL config"
    insertafter: "^net:$"
    block: |2
        ssl:
          mode: requireSSL
          certificateKeyFile: /etc/ssl/mongodb.pem
          PEMKeyFile: /etc/ssl/mongodb.pem
          CAFile: /etc/ssl/mongodbca.pem
  # notify: restart mongod

# V-81875
- name: enable NIST FIPS 140-2-validated cryptographic modules
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)FIPSMode:.*"
    line: "    FIPSMode: true"
    insertafter: "^ +ssl:$"
  # notify: restart mongod

# V-81883
- name: enable MongoDB Encrypted Storage Engine
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)enableEncryption:.*"
    line: "  enableEncryption: true"
    insertafter: "^security:$"
  # notify: restart mongod

# V-81891 V-81889
- name: redact sensative data in log file
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)javascriptEnabled:.*"
    line: "  javascriptEnabled: false"
    insertafter: "^security:$"
  # notify: restart mongod

# V-81895
- name: redact sensative data in log file
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)redactClientLogData:.*"
    line: "  redactClientLogData: true"
    insertafter: "^security:$"
  # notify: restart mongod

# V-81847 V-81901 V-81905 V-81907 
- name: set audit log destination
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: ".*auditLog:.*\n.*destination:.*"
    line: "auditLog:\n  destination: syslog"
 # notify: restart mongod

# # V-81903
- name: set path of database files
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: ".*dbPath:.*"
    line: "  dbPath: data/db"
    insertafter: "^storage:$"
#   notify: restart mongod

# V-81917
- name: generate self-signed ssl certificate and key
  shell: |
    openssl req -nodes -x509 -newkey rsa:2048 -keyout /tmp/ca.key -out /tmp/ca.crt -subj "/C=US/ST=DC/L=GOV/O=DoD/OU=root/CN=MONGODB/emailAddress=ansible@mongodb.config"
    openssl req -nodes -newkey rsa:2048 -keyout /tmp/server.key -out /tmp/server.csr -subj "/C=US/ST=DC/L=GOV/O=DoD/OU=server/CN=MONGODB/emailAddress=ansible@mongodb.config"
    openssl x509 -req -in /tmp/server.csr -CA /tmp/ca.crt -CAkey /tmp/ca.key -CAcreateserial -out /tmp/server.crt
    cat /tmp/server.key /tmp/server.crt > /etc/ssl/mongodb.pem
  changed_when: 1

# V-81919 not working
- name: set KMIP settings for data at rest encryption
  blockinfile:
    path: "{{ mongod_conf }}"
    marker: "# {mark} KMIP config"
    insertafter: "^security:$"
    block: |2
        kmip:
          serverName: server.ip
          port: 5696
          clientCertificateFile: /etc/ssl/mongodb_kmip_client.pem
          serverCAFile: /etc/ssl/mongodb_kmip_ca.pem
 # notify: restart mongod

# V-81873 

# V-81893 - works
- name: Verify error messages 
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: "(|#)redactClientLogData:.*"
    line: "  redactClientLogData: true"
    insertafter: "^security:$"
  # notify: restart mongod

# # V-81915 - works
- name: configure saslauthd
  lineinfile: 
    path: "{{ saslauthd }}"
    regexp: '^MECH=pam$'
    line: 'MECH=ldap'
  become: true
  # notify: restart saslauthd

- name: edit timeout cache
  lineinfile:
    path: "{{ saslauthd }}"
    regexp: '^FLAGS=$'
    line: "FLAGS=-t 900"
  become: true
  # notify: restart saslauthd

- name: Edit LDAP timeout
  blockinfile:
    path: "{{ mongod_conf }}"
    marker: "# {mark} LDAP config"
    insertafter: "^security:$"
    block: |2
        ldap:
          timeoutMS: 10000
  # notify: restart mongod

# V-81925 #  works
- name: enable auditing
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: '^#auditLog:$'
    line: 'auditLog:'
    
- name: Document validation at time of creation
  lineinfile:
    path: "{{ mongod_conf }}"
    regexp: '^destination:$'
    line: "  destination: syslog"
    insertafter: "^auditLog:$"

# V-81927 

